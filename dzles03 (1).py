import functools

# Задание-1:
# Напишите функцию, округляющую полученное измеренное десятичное число
# до кол-ва знаков (кол-во знаков перед становится вторым аргументом).
# Округление должно происходить по математическим правилам (0,6 -> 1, 0,4 -> 0).
# Для решения задач не используйте встроенные функции и функции из модуля математика.
#
# def  my_round ( num , rounding ):
#     round (num [rounding])
#     pass


# print (my_round ( 2.1234567 , 5 ))
# print (my_round ( 2.1999967 , 5 ))
# print (my_round ( 2.9999967 , 5 ))


# Задание-2:
# # Дан шестизначный номер билета. Определить, является ли билет счастливым.
# # Решение реализовать в виде функции.
# # Билет считается счастливым, если сумма его первых и последних цифр равны.
# # !!! PS: функция не должна НИЧЕГО print'ить

#def lucky_ticket(ticket_number):
#    sum1 = ticket_number % 10 + ticket_number % 1000 % 100 // 10 + ticket_number % 1000 // 100
#    sum2 = ticket_number // 100000 + ticket_number // 1000 % 10 + ticket_number // 1000 % 100 // 10
#    if sum1 == sum2:
#        return True
#    else:
#        return False

#print(lucky_ticket(123006))
#print(lucky_ticket(12321))
#print(lucky_ticket(436751))


# Задание-1:
# Напишите функцию, возвращающуюся в ряд Фибоначчи с n-элемента до m-элемента.
# Первыми элементами ряда считать цифры 1 1
#list_fab = []

#def  fibonacci ( n , m ):
    #for el in range(n, m):
        #n, n1 = 1, 1
        #yield n
        #n, n1 = n1, n + n1
        #list_fab.append(n)


#print(list_fab)



# Задача-2: +++++++++++++++++++++++++++++++++++
# Напишите функцию, сортирующую принимаемый список по возрастанию.
# Для сортировки используйте любой алгоритм (например, пузырьковый).
# Для решения данной задачи нельзя использовать встроенную функцию и метод sort ()



sort_to_max = [2, 10, - 12, 2, 5, 20, - 11, 4, 4, 0]
n = len (sort_to_max)
def bubble(list):
    for i in range (n-1):
        for a in range (n - i - 1):
            if list[a] > list[a + 1]:
               list[a], list[a + 1] = list[a + 1], list[a]
    print (list)

bubble(sort_to_max)



# Задача-3:++++++++++++++++++++++++++++++++++++++++++++++++++
# Напишите собственную реализацию стандартной функции filter.
# Разумеется, внутри нельзя использовать саму функцию фильтра.
l = []
for a in range(2, 10):
    if a % 2 == 0:
        l.append(a)
print(l)

b = filter((lambda a: a % 2 == 0), range(2, 10))
print(list(b))



# Задача-4:+++++++++++++++++++++++++++++
# Даны четыре точки А1 (х1, у1), А2 (х2, у2), А3 (х3, у3), А4 (х4, у4).
# Определить, будут ли они вершинами параллелограмма.


def parallelogram(x1, y1, x2, y2, x3, y3, x4, y4):
    if x4< x1 < x3 < x2 and y1 == y2 and y4 == y3 and x1 - x4 == x2 - x3:
        print("Данные точки являются вершинами параллелограмма!")
    else:
        print("Данные точки НЕ являются вершинами параллелограмма")

parallelogram(4, 8, 10, 8, 8, 4, 2, 4)


